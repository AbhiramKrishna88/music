/**
 * ownCloud - Music app
 *
 * This file is licensed under the Affero General Public License version 3 or
 * later. See the COPYING file.
 *
 * @author Morris Jobke <hey@morrisjobke.de>
 * @author Pauli Järvinen <pauli.jarvinen@gmail.com>
 * @copyright Morris Jobke 2013, 2014
 * @copyright Pauli Järvinen 2016 - 2018
 */

#notification a {
	text-decoration: underline;
}

.icon-audio {
	background-image: url('../img/audio.svg');
}

/* angular JS wrapper for main controller */
#app > div {
	width: 100%;
	height: 100%;
}

#app-view {
	top: 0;
	bottom: 0;
	right: 0;
	left: 0;
	position: absolute;
	padding-right: 50px;
}

#app-view.started {
	padding-top: 66px;
}

.play {
	display: inline;
	visibility: hidden;
	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=70)";
	filter: alpha(opacity = 70);
	opacity: .7;
	height: 10px;
}

.artist-area {
	clear: both;
	padding-top: 15px;
}

.artist-area > h1 {
	margin-left: 28px;
	font-size: 34px;
	line-height: 36px;
}

.artist-area > h1 span:hover,
.artist-area > h1 span *:hover {
	cursor: pointer;
}

h1 .play {
	margin-bottom: 2px;
	cursor: pointer;
	width: 16px;
	height: 16px;
}

h1 span:hover .play {
	visibility: visible
}

.album-area {
	padding: 14px 28px;
	width: 480px;
	float: left;
}

.album-area > h2 {
	font-size: 21px;
	padding-bottom: 21px;
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
}

.album-area > h2 > div {
	display: inline-block;
}

.album-area > h2 *:hover {
	cursor: pointer;
}

.albumart {
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
}

.album-area > .albumart,
.album-area > img {
	float: left;
	width: 190px;
	height: 190px;
	line-height: 190px;
	font-size: 105px;
}

.album-area > img.overlay {
	margin-left: -190px;
	padding: 46px;
}

.album-area:hover > img.overlay {
	visibility: visible;
	cursor: pointer;
}

.album-area .track-list {
	margin-left: 195px;
}

.album-area .track-list > li {
	display: table;
	padding-left: 2px;
	padding-top: 6px;
	padding-bottom: 5px;
	text-overflow: ellipsis;
	overflow: hidden;
	white-space: nowrap;
	cursor: pointer;
}

.album-area .track-list li *,
#alltracks-area .track-list li * {
	cursor: pointer;
}

.album-area .track-list li > div,
#alltracks-area .track-list li > div {
	display: table-cell;
}

.album-area .track-list li > div > span {
	max-width: 200px;
	text-overflow: ellipsis;
	overflow: hidden;
	display: inline-block;
	vertical-align: bottom;
}

#alltracks-area .track-list li > div > span {
	white-space: normal;
}

track-list.collapsed .collapsible {
	display: none;
}

.track-list .icon-details {
	display: table-cell;
	vertical-align: middle;
	margin: 0;
	border: none;
	background-color: transparent;
	visibility: hidden;

	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
	filter: alpha(opacity=50);
	opacity: 0.5;
}

.track-list li:hover .icon-details {
	visibility: visible;
}

.track-list .icon-details:hover {
	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
	filter: alpha(opacity=100);
	opacity: 1;
}

.track-list > li.more-less {
	padding-left: 18px;
	padding-bottom: 0px;
	display: none;
}

track-list.collapsed li.more-less:not(.collapsible),
track-list:not(.collapsed) li.more-less.collapsible {
	display: inline-block;
}

.play-pause {
	display: inline-block;
	width: 10px;
	height: 10px;
	margin-left: 0px;
	margin-right: 6px;
	background-image: none;
	background-size: 100% 100%;
	background-position: center;
	background-repeat: no-repeat;

	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=60)";
	filter: alpha(opacity = 60);
	opacity: .6;
}

#app-view :hover > .play-pause {
	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
	filter: alpha(opacity = 100);
	opacity: 1.0;
}

.current.playing .play-pause,
div:hover > .play-pause,
#app-view .current:not(.playing) div:hover .play-pause {
	background-image: url(../img/play-big.svg);
}

.current:not(.playing) .play-pause,
#app-view .current.playing div:hover .play-pause {
	background-image: url(../img/pause-big.svg)
}

.muted {
	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
	filter: alpha(opacity = 50);
	opacity: .5;
	display: inline;
}

.alphabet-navigation {
	z-index: 5;
	position: fixed;
	right: 0;
	bottom: 0;
	width: 50px;
	text-align: center;
}

.alphabet-navigation a {
	display: block;
	font-weight: bold;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=10)";
	filter: alpha(opacity = 10);
	opacity: .1;
}

.alphabet-navigation a, .alphabet-navigation a * {
	cursor: default;
}

.alphabet-navigation a.available {
	display: block;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
	filter: alpha(opacity = 40);
	opacity: .4;
}

.alphabet-navigation a.available, .alphabet-navigation a.available * {
	cursor: pointer;
}

.alphabet-navigation a.available:hover {
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
	filter: alpha(opacity = 80);
	opacity: .8;
}

.alphabet-navigation a.filler.dotted:before
{
	content: "\00b7";
}

.alphabet-navigation a.filler.dotted > span.letter-content
{
	display: none;
}

.alphabet-navigation a.filler.stripped
{
	display: none;
}

.clickable, .clickable * {
	cursor: pointer;
}

#scanning, #toScan, #emptycontent {
	position: fixed;
	top: 0;
	background-color: rgba(255,255,255,0.95);
	padding: 20px 50px;
	z-index: 1;
	width: auto;
	left: 50%;
	margin-left: 125px;
	transform: translateX(-50%);
	-ms-transform: translateX(-50%);
}

#toScan:hover * {
	color: #000;
	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
	filter: alpha(opacity = 100);
	opacity: 1;
}

#updateData {
	position: fixed;
	width: 40px;
	height: 40px;
	padding: 10px;
	bottom: 0;
	left: 250px;
	z-index: 101;
	background-color: rgba(255,255,255,0.5);

	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=40)";
	filter: alpha(opacity = 40);
	opacity: .4;
}

#updateData:hover, #updateData:focus {
	/* opacity */
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
	filter: alpha(opacity = 100);
	opacity: 1;
}
